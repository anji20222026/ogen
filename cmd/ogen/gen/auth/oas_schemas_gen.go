// Code generated by ogen, DO NOT EDIT.

package api

type BearerAuth struct {
	Token string
	Roles []string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// GetRoles returns the value of Roles.
func (s *BearerAuth) GetRoles() []string {
	return s.Roles
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// SetRoles sets the value of Roles.
func (s *BearerAuth) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

func (*ErrorStatusCode) getCurrentUserRes() {}
func (*ErrorStatusCode) logoutRes()         {}

// GetCurrentUserUnauthorized is response for GetCurrentUser operation.
type GetCurrentUserUnauthorized struct{}

func (*GetCurrentUserUnauthorized) getCurrentUserRes() {}

// Ref: #/components/schemas/LoginRequest
type LoginRequest struct {
	// 用户名.
	Username string `json:"username"`
	// 密码.
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *LoginRequest) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *LoginRequest) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *LoginRequest) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *LoginRequest) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/LoginResponse
type LoginResponse struct {
	// 认证令牌.
	Token string `json:"token"`
	User  User   `json:"user"`
}

// GetToken returns the value of Token.
func (s *LoginResponse) GetToken() string {
	return s.Token
}

// GetUser returns the value of User.
func (s *LoginResponse) GetUser() User {
	return s.User
}

// SetToken sets the value of Token.
func (s *LoginResponse) SetToken(val string) {
	s.Token = val
}

// SetUser sets the value of User.
func (s *LoginResponse) SetUser(val User) {
	s.User = val
}

func (*LoginResponse) loginRes() {}

// LoginUnauthorized is response for Login operation.
type LoginUnauthorized struct{}

func (*LoginUnauthorized) loginRes() {}

// LogoutNoContent is response for Logout operation.
type LogoutNoContent struct{}

func (*LogoutNoContent) logoutRes() {}

// LogoutUnauthorized is response for Logout operation.
type LogoutUnauthorized struct{}

func (*LogoutUnauthorized) logoutRes() {}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/User
type User struct {
	// 用户ID.
	UID int `json:"uid"`
	// 用户名.
	Username string `json:"username"`
	// 角色.
	Role OptString `json:"role"`
}

// GetUID returns the value of UID.
func (s *User) GetUID() int {
	return s.UID
}

// GetUsername returns the value of Username.
func (s *User) GetUsername() string {
	return s.Username
}

// GetRole returns the value of Role.
func (s *User) GetRole() OptString {
	return s.Role
}

// SetUID sets the value of UID.
func (s *User) SetUID(val int) {
	s.UID = val
}

// SetUsername sets the value of Username.
func (s *User) SetUsername(val string) {
	s.Username = val
}

// SetRole sets the value of Role.
func (s *User) SetRole(val OptString) {
	s.Role = val
}

func (*User) getCurrentUserRes() {}
